{"version":3,"sources":["webpack:///E:/study/vue/vue-cli-mpa/node_modules/core-js/library/modules/_create-property.js","webpack:///E:/study/vue/vue-cli-mpa/node_modules/core-js/library/modules/es6.array.from.js","webpack:///E:/study/vue/vue-cli-mpa/node_modules/core-js/library/fn/is-iterable.js","webpack:///E:/study/vue/vue-cli-mpa/src/pages/index/views/market.vue?f038","webpack:///E:/study/vue/vue-cli-mpa/node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///E:/study/vue/vue-cli-mpa/node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///E:/study/vue/vue-cli-mpa/node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///E:/study/vue/vue-cli-mpa/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///src/pages/index/views/market.vue","webpack:///E:/study/vue/vue-cli-mpa/src/pages/index/views/market.vue?0da7","webpack:///E:/study/vue/vue-cli-mpa/src/pages/index/views/market.vue","webpack:///E:/study/vue/vue-cli-mpa/node_modules/@babel/runtime-corejs2/core-js/array/from.js","webpack:///E:/study/vue/vue-cli-mpa/node_modules/core-js/library/modules/core.is-iterable.js","webpack:///E:/study/vue/vue-cli-mpa/src/pages/index/views/market.vue?7c5b","webpack:///E:/study/vue/vue-cli-mpa/node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","webpack:///E:/study/vue/vue-cli-mpa/node_modules/core-js/library/fn/array/from.js"],"names":["$defineProperty","__webpack_require__","createDesc","module","exports","object","index","value","f","ctx","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","Array","from","arrayLike","length","result","step","iterator","O","C","this","aLen","arguments","mapfn","undefined","mapping","iterFn","next","done","render","_vm","_h","$createElement","_c","_self","staticClass","_l","item","key","staticStyle","position","attrs","chartData","option","rightOption","_e","flag","_v","_s","con","month","_f","estimate","a","b","staticRenderFns","_arrayWithoutHoles","arr","is_array_default","i","arr2","_iterableToArray","is_iterable_default","Object","prototype","toString","from_default","_nonIterableSpread","TypeError","_toConsumableArray","marketvue_type_script_lang_js_","data","curveChartData","forecastChartData","ChartDataList","content","components","chart","methods","setForecastOption","_this","$x","get","url","brentPrice","then","res","status","date","x_lable","emptyArr","Ylist","concat","brent","forward","minY","Math","min","apply","toFixed","maxY","max","brentDate","slice","forwardDate","lastData","unshift","forecastOption","color","legend","type","textStyle","fontWeight","fontSize","lineHeight","padding","show","bottom","left","name","icon","title","text","tooltip","trigger","axisPointer","animation","label","backgroundColor","borderColor","borderWidth","shadowBlur","shadowOffsetX","shadowOffsetY","grid","top","right","xAxis","offset","axisLine","lineStyle","splitLine","width","axisLabel","formatter","idx","reg","RegExp","replace","axisTick","boundaryGap","yAxis","nameGap","nameLocation","nameTextStyle","align","interval","splitArea","areaStyle","series","smooth","symbol","normal","symbolSize","itemStyle","push","setCurveOption","_this2","brentCurve","CurveOption","dataZoom","start","end","split","join","current","last","last_four","last_twen","spread","mounted","_this3","brentView","console","log","h","views_marketvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","classof","ITERATOR","Iterators","isIterable","it","hasOwnProperty","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_market_vue_vue_type_style_index_0_id_53a24df4_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_market_vue_vue_type_style_index_0_id_53a24df4_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"js/chunk-978df664.ef552a6f.js","sourcesContent":["'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"market\"},[_c('ul',_vm._l((_vm.ChartDataList),function(item,index){return _c('li',{key:index,staticClass:\"clearfix\"},[(item.flag)?_c('div',{staticClass:\"con-chart\",staticStyle:{\"position\":\"relative\"}},[_c('div',{staticClass:\"brent-left\"},[_c('chart',{attrs:{\"chartData\":item.option}})],1),_c('div',{staticClass:\"brent-right\"},[_c('chart',{attrs:{\"chartData\":item.rightOption}})],1)]):_vm._e(),(!item.flag)?_c('div',{staticClass:\"con-chart\"},[_c('chart',{attrs:{\"chartData\":item.option}})],1):_vm._e(),(item.flag)?_c('div',{staticClass:\"con-abstract\"},[_c('p',[_vm._v(\"说明： Brent原油价格预期走势是基于原油市场供需基本面数据模型进行测算获得的，反映未来一年Brent原油市场价格走势。\")]),_c('div',{staticClass:\"con-abstract_expect clearfix\"},[_c('label',[_vm._v(_vm._s(item.con[0].month)+\"月均价预期值\")]),_c('span',[_vm._v(_vm._s(_vm._f(\"roundNumber\")(item.con[0].estimate,2)))])]),_c('div',{staticClass:\"con-abstract_expect clearfix\"},[_c('label',[_vm._v(_vm._s(item.con[1].month)+\"月均价预期值\")]),_c('span',[_vm._v(_vm._s(_vm._f(\"roundNumber\")(item.con[1].estimate,2)))])])]):_vm._e(),(!item.flag)?_c('div',{staticClass:\"con-abstract\"},[_c('p',[_vm._v(\"说明：远期曲线是由原油期货按不同交割月份依照合约到期时间先后, 串联而成的一条曲线。\")]),_c('div',{staticClass:\"con-abstract_expect clearfix\"},[_c('label',[_vm._v(\"Brent期货1-2行价差\")]),_c('span',[_vm._v(_vm._s(item.con.a))])]),_c('div',{staticClass:\"con-abstract_expect clearfix\"},[_c('label',[_vm._v(\"Brent期货1-6行价差\")]),_c('span',[_vm._v(_vm._s(item.con.b))])])]):_vm._e()])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","<!-- 市场行情 -->\r\n<template>\r\n  <div class=\"market\">\r\n    <ul>\r\n      <li class=\"clearfix\" v-for=\"(item,index) in ChartDataList\" :key=\"index\">\r\n        <div class=\"con-chart\" v-if=\"item.flag\" style=\"position: relative;\">\r\n          <div class=\"brent-left\">\r\n            <chart :chartData=\"item.option\"></chart>\r\n          </div>\r\n          <div class=\"brent-right\">\r\n            <chart :chartData=\"item.rightOption\"></chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"con-chart\" v-if=\"!item.flag\">\r\n          <chart :chartData=\"item.option\"></chart>\r\n        </div>\r\n        <div class=\"con-abstract\" v-if=\"item.flag\">\r\n          <p>说明： Brent原油价格预期走势是基于原油市场供需基本面数据模型进行测算获得的，反映未来一年Brent原油市场价格走势。</p>\r\n          <div class=\"con-abstract_expect clearfix\">\r\n            <label>{{item.con[0].month}}月均价预期值</label>\r\n            <span>{{item.con[0].estimate | roundNumber(2)}}</span>\r\n          </div>\r\n          <div class=\"con-abstract_expect clearfix\">\r\n            <label>{{item.con[1].month}}月均价预期值</label>\r\n            <span>{{item.con[1].estimate | roundNumber(2)}}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"con-abstract\" v-if=\"!item.flag\">\r\n          <!-- 月差是用近月的合约价格减去远月的合约价格。 -->\r\n          <p>说明：远期曲线是由原油期货按不同交割月份依照合约到期时间先后, 串联而成的一条曲线。</p>\r\n          <div class=\"con-abstract_expect clearfix\">\r\n            <label>Brent期货1-2行价差</label>\r\n            <span>{{item.con.a}}</span>\r\n          </div>\r\n          <div class=\"con-abstract_expect clearfix\">\r\n            <label>Brent期货1-6行价差</label>\r\n            <span>{{item.con.b}}</span>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from \"echarts\";\r\nimport chart from \"@/components/chart\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      curveChartData: {},\r\n      forecastChartData: {},\r\n      ChartDataList: [],\r\n      content: {}\r\n    };\r\n  },\r\n  components: {\r\n    chart\r\n  },\r\n  methods: {\r\n    //远期价格预测\r\n    setForecastOption() {\r\n      return this.$x.get(this.url.brentPrice, {}).then(res => {\r\n        if (res.status == 10000) {\r\n          let chartData = res.data;\r\n          let date = res.data.x_lable;\r\n          let arr = [\r\n            \"-\",\r\n            \"-\",\r\n            \"-\",\r\n            \"-\",\r\n            \"-\",\r\n            \"-\",\r\n            \"-\",\r\n            \"-\",\r\n            \"-\",\r\n            \"-\",\r\n            \"-\",\r\n            \"-\"\r\n          ];\r\n          let emptyArr = [\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\"\r\n          ];\r\n          let Ylist = [...res.data.brent,...res.data.estimate,...res.data.forward];\r\n          let minY = ((Math.min.apply(Math,Ylist)/10).toFixed(0))*10 -10\r\n          let maxY = ((Math.max.apply(Math, Ylist)/10).toFixed(0))*10 + 10\r\n          let brentDate = [].concat(date.slice(0, date.length - 12), emptyArr);\r\n          let forwardDate = date.slice(-12);\r\n          let lastData = res.data.brent[res.data.brent.length-1]\r\n          forwardDate.unshift('')\r\n          let brent = [].concat(res.data.brent, arr);\r\n          res.data.estimate.unshift(lastData);\r\n          res.data.forward.unshift(lastData);\r\n          let estimate = res.data.estimate;\r\n          let forward = res.data.forward;\r\n          // const brentLast = chartData.brent[chartData.brent.length - 1];\r\n          // chartData.estimate.unshift(brentLast);\r\n          // chartData.forward.unshift(brentLast);\r\n          // let _arr = [];\r\n          // chartData.brent.map((ele, index) => {\r\n          //   if (index < chartData.brent.length - 1) {\r\n          //     _arr.push(\"-\");\r\n          //   }\r\n          // });\r\n          // const estimate = [..._arr, ...chartData.estimate],\r\n          //   forward = [..._arr, ...chartData.forward];\r\n          //Brent 远期价格预期\r\n          let forecastOption = {\r\n            option: {\r\n              // animation: false,\r\n              color: [\"#FC5965\", \"#FE2667\", \"#00A4CF\"],\r\n              legend: {\r\n                type: \"plain\",\r\n                textStyle: {\r\n                  color: \"#fff\",\r\n                  fontWeight: \"400\",\r\n                  fontSize: \"30\",\r\n                  lineHeight: \"42\",\r\n                  padding: [0, 80, 0, 10]\r\n                },\r\n                show: true,\r\n                bottom: \"0\",\r\n                left: \"70\",\r\n                data: [\r\n                  {\r\n                    name: \"Brent日结算价\",\r\n                    // 强制设置图形为圆。\r\n                    icon: \"roundRect\"\r\n                  },\r\n                  {\r\n                    name: \"远期价格预期\",\r\n                    // 强制设置图形为圆。\r\n                    icon: \"roundRect\"\r\n                  },\r\n                  {\r\n                    name: \"远期曲线\",\r\n                    // 强制设置图形为圆。\r\n                    icon: \"roundRect\"\r\n                  }\r\n                ]\r\n              },\r\n              title: {\r\n                text: \"Brent远期价格预期\", //标题\r\n                left: \"0\",\r\n                textStyle: {\r\n                  color: \"#fff\",\r\n                  fontSize: \"60\"\r\n                }\r\n              },\r\n              tooltip: {\r\n                trigger: \"axis\",\r\n                axisPointer: {\r\n                  type: \"cross\",\r\n                  animation: false,\r\n                  label: {\r\n                    backgroundColor: \"#ccc\",\r\n                    fontSize: 28,\r\n                    borderColor: \"#aaa\",\r\n                    borderWidth: 1,\r\n                    shadowBlur: 0,\r\n                    shadowOffsetX: 0,\r\n                    shadowOffsetY: 0,\r\n                    textStyle: {\r\n                      color: \"#222\"\r\n                    }\r\n                  }\r\n                }\r\n                // formatter: function(params) {\r\n                //   if (params[3]) {\r\n                //     return params[2].name + \"<br />\" + params[3].value;\r\n                //   } else {\r\n                //     return params[2].name;\r\n                //   }\r\n                // }\r\n              },\r\n              grid: {\r\n                //坐标系（）\r\n                bottom: \"170\",\r\n                left: \"80\",\r\n                top: \"180\",\r\n                right: \"10\"\r\n              },\r\n              // calculable: true,\r\n              xAxis: [\r\n                {\r\n                  type: \"category\",\r\n                  data: brentDate,\r\n                  show: true,\r\n                  offset: 25,\r\n                  axisLine: {\r\n                    show: false,\r\n                    lineStyle: {\r\n                      color: \"#3b3e52\"\r\n                    }\r\n                  },\r\n                  splitLine: {\r\n                    //控制区域的分割线\r\n                    show: false,\r\n                    lineStyle: {\r\n                      color: \"rgba(59, 62, 82, 1)\",\r\n                      width: 3,\r\n                      type: \"solid\"\r\n                    }\r\n                  },\r\n                  axisLabel: {\r\n                    color: \"#93959d\",\r\n                    fontSize: 32,\r\n                    formatter: function(value, idx) {\r\n                      var reg = new RegExp(\"-\", \"g\");\r\n                      var a = value.replace(reg, \"/\").slice(0, 7);\r\n                      return a;\r\n                    }\r\n                  },\r\n                  axisPointer: {\r\n                    type: \"shadow\"\r\n                  },\r\n\r\n                  axisTick: {\r\n                    //y轴刻度线\r\n                    show: false\r\n                  },\r\n                  boundaryGap: false\r\n                }\r\n              ],\r\n              yAxis: [\r\n                {\r\n                  type: \"value\",\r\n                  offset: \"20\",\r\n                  name: \"USD/bbl.\",\r\n                  nameGap: \"40\", //坐标轴名称与轴线之间的距离。\r\n                  nameLocation: \"end\",\r\n                  nameTextStyle: {\r\n                    color: \"#93959d\",\r\n                    fontSize: 28,\r\n                    align: \"center\"\r\n                  },\r\n                  interval: 10,\r\n                  axisLabel: {\r\n                    color: \"#93959d\",\r\n                    fontSize: 28\r\n                  },\r\n                  min: minY,\r\n                  max: maxY,\r\n                  axisLine: {\r\n                    show: false\r\n                  },\r\n                  splitLine: {\r\n                    //控制区域的分割线\r\n                    show: true,\r\n                    lineStyle: {\r\n                      color: \"rgba(59, 62, 82, 1)\",\r\n                      width: 3,\r\n                      type: \"solid\"\r\n                    }\r\n                  },\r\n                  splitArea: {\r\n                    //控制区域颜色\r\n                    show: true,\r\n                    areaStyle: {\r\n                      color: [\"transparent\", \"transparent\"]\r\n                    }\r\n                  },\r\n                  axisTick: {\r\n                    //刻度线\r\n                    show: false\r\n                  }\r\n                }\r\n              ],\r\n              series: [\r\n                {\r\n                  name: \"Brent日结算价\",\r\n                  type: \"line\",\r\n                  smooth: false,\r\n                  symbol: \"none\",\r\n                  // yAxisIndex: 0,\r\n                  data: brent,\r\n                  lineStyle: {\r\n                    normal: { width: \"5\", color: \"#FC5965\" }\r\n                  }\r\n                  // areaStyle: {\r\n                  //   color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  //     {\r\n                  //       offset: 0,\r\n                  //       color: \"rgba(252, 89, 101, 0.3)\"\r\n                  //     },\r\n                  //     {\r\n                  //       offset: 1,\r\n                  //       color: \"transparent\"\r\n                  //     }\r\n                  //   ])\r\n                  // }\r\n                },\r\n                {\r\n                  name: \"远期价格预期\",\r\n                  type: \"line\",\r\n                },\r\n                {\r\n                  name: \"远期曲线\",\r\n                  type: \"line\",\r\n                }\r\n                \r\n              ]\r\n            }\r\n          };\r\n          let rightOption = {\r\n            // animation: false,\r\n            option: {\r\n              tooltip: {\r\n                trigger: \"axis\",\r\n                axisPointer: {\r\n                  type: \"cross\",\r\n                  animation: false,\r\n                  label: {\r\n                    backgroundColor: \"#ccc\",\r\n                    fontSize: 28,\r\n                    borderColor: \"#aaa\",\r\n                    borderWidth: 1,\r\n                    shadowBlur: 0,\r\n                    shadowOffsetX: 0,\r\n                    shadowOffsetY: 0,\r\n                    textStyle: {\r\n                      color: \"#222\"\r\n                    }\r\n                  }\r\n                }\r\n                // formatter: function(params) {\r\n                //   if (params[3]) {\r\n                //     return params[2].name + \"<br />\" + params[3].value;\r\n                //   } else {\r\n                //     return params[2].name;\r\n                //   }\r\n                // }\r\n              },\r\n              grid: {\r\n                //坐标系（）\r\n                bottom: \"170\",\r\n                left: \"100\",\r\n                top: \"180\",\r\n                right: \"100\"\r\n              },\r\n              // calculable: true,\r\n              xAxis: [\r\n                {\r\n                  type: \"category\",\r\n                  data: forwardDate,\r\n                  show: true,\r\n                  offset: 25,\r\n                  axisLine: {\r\n                    show: false,\r\n                    lineStyle: {\r\n                      color: \"#3b3e52\"\r\n                    }\r\n                  },\r\n                  splitLine: {\r\n                    //控制区域的分割线\r\n                    show: false,\r\n                    lineStyle: {\r\n                      color: \"rgba(59, 62, 82, 1)\",\r\n                      width: 3,\r\n                      type: \"solid\"\r\n                    }\r\n                  },\r\n                  axisLabel: {\r\n                    color: \"#93959d\",\r\n                    fontSize: 32,\r\n                    formatter: function(value, idx) {\r\n                      var reg = new RegExp(\"-\", \"g\");\r\n                      var a = value.replace(reg, \"/\").slice(0, 7);\r\n                      return a;\r\n                    }\r\n                  },\r\n                  axisPointer: {\r\n                    type: \"shadow\"\r\n                  },\r\n\r\n                  axisTick: {\r\n                    //y轴刻度线\r\n                    show: false\r\n                  },\r\n                  boundaryGap: false\r\n                }\r\n              ],\r\n              yAxis: [\r\n                {\r\n                  type: \"value\",\r\n                  offset: \"20\",\r\n\r\n                  axisLabel: {\r\n                    show: false,\r\n                  },\r\n                  axisLine: {\r\n                    show: false\r\n                  },\r\n                  splitLine: {\r\n                    //控制区域的分割线\r\n                    show: true,\r\n                    lineStyle: {\r\n                      color: \"rgba(59, 62, 82, 1)\",\r\n                      width: 3,\r\n                      type: \"solid\"\r\n                    }\r\n                  },\r\n                  interval: 10,\r\n                  min:minY,\r\n                  max: maxY,\r\n                  splitArea: {\r\n                    //控制区域颜色\r\n                    show: true,\r\n                    areaStyle: {\r\n                      color: [\"transparent\", \"transparent\"]\r\n                    }\r\n                  },\r\n                  axisTick: {\r\n                    //刻度线\r\n                    show: false\r\n                  }\r\n                }\r\n              ],\r\n              series: [\r\n                {\r\n                  name: \"价格趋势\",\r\n                  type: \"line\",\r\n                  smooth: false,\r\n                  symbol: \"diamond\",\r\n                  symbolSize: 20,\r\n                  // yAxisIndex: 0,\r\n                  data: estimate,\r\n                  lineStyle: {\r\n                    normal: { width: \"5\", color: \"#FE2667\" }\r\n                  },\r\n                  itemStyle : {\r\n                    normal : {\r\n                      color:'#FE2667',\r\n                      lineStyle:{\r\n                        color:'#FE2667'\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  name: \"远期曲线\",\r\n                  type: \"line\",\r\n                  smooth: false,\r\n                  symbol: \"diamond\",\r\n                  symbolSize: 20,\r\n                  data: forward,\r\n                  lineStyle: {\r\n                    normal: { width: \"5\", color: \"#00A4CF\" }\r\n                  },\r\n                  itemStyle : {\r\n                    normal : {\r\n                      color:'#00A4CF',\r\n                      lineStyle:{\r\n                        color:'#00A4CF'\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          };\r\n          this.ChartDataList.push({\r\n            option: forecastOption,\r\n            rightOption: rightOption,\r\n            flag: true,\r\n            con: this.content.estimate\r\n          });\r\n        }\r\n      });\r\n    },\r\n    //远期曲线\r\n    setCurveOption() {\r\n      this.$x.get(this.url.brentCurve, {}).then(res => {\r\n        let chartData = res.data;\r\n        //Brent 远期曲线\r\n        let CurveOption = {\r\n          option: {\r\n            // animation: false,\r\n            dataZoom: [\r\n              {\r\n                type: \"inside\",\r\n                start: 0,\r\n                end: 100\r\n              }\r\n            ],\r\n            color: [\"#00A4CF\", \"#D98914\", \"#06A18E\", \"#F678A0\"],\r\n            legend: {\r\n              type: \"plain\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontWeight: \"400\",\r\n                fontSize: \"30\",\r\n                lineHeight: \"42\",\r\n                padding: [0, 80, 0, 10]\r\n              },\r\n              show: true,\r\n              bottom: \"0\",\r\n              left: \"70\",\r\n              data: [\r\n                {\r\n                  name: chartData.date,\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: \"一天前\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: \"一周前\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: \"一月前\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                }\r\n              ]\r\n            },\r\n            title: {\r\n              text: \"Brent远期曲线\", //标题\r\n              left: \"0\",\r\n              top: \"20\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: \"60\"\r\n              }\r\n            },\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              axisPointer: {\r\n                type: \"cross\",\r\n                animation: false,\r\n                label: {\r\n                  backgroundColor: \"#ccc\",\r\n                  fontSize: 28,\r\n                  borderColor: \"#aaa\",\r\n                  borderWidth: 1,\r\n                  shadowBlur: 0,\r\n                  shadowOffsetX: 0,\r\n                  shadowOffsetY: 0,\r\n                  textStyle: {\r\n                    color: \"#222\"\r\n                  }\r\n                }\r\n              }\r\n              // formatter: function(params) {\r\n              //   if (params[3]) {\r\n              //     return params[2].name + \"<br />\" + params[3].value;\r\n              //   } else {\r\n              //     return params[2].name;\r\n              //   }\r\n              // }\r\n            },\r\n            grid: {\r\n              //坐标系（）\r\n              bottom: \"170\",\r\n              left: \"90\",\r\n              top: \"180\",\r\n              right: \"85\"\r\n            },\r\n            // calculable: true,\r\n            xAxis: [\r\n              {\r\n                type: \"category\",\r\n                data: chartData.x_lable,\r\n                show: true,\r\n                offset: 25,\r\n                axisLine: {\r\n                    show: false,\r\n                  lineStyle: {\r\n                    color: \"#3b3e52\"\r\n                  }\r\n                },\r\n\r\n                splitLine: {\r\n                  //控制区域的分割线\r\n                  show: false,\r\n                  lineStyle: {\r\n                    color: \"rgba(59, 62, 82, 1)\",\r\n                    width: 3,\r\n                    type: \"solid\"\r\n                  }\r\n                },\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 32,\r\n                  formatter: function(value, idx) {\r\n                    var reg = new RegExp(\"年\", \"g\");\r\n                    var a = value\r\n                      .replace(reg, \"/\")\r\n                      .split(\"月\")\r\n                      .join(\"\");\r\n                    return a;\r\n                  }\r\n                },\r\n                axisPointer: {\r\n                  type: \"shadow\"\r\n                },\r\n\r\n                axisTick: {\r\n                  //y轴刻度线\r\n                  show: false\r\n                },\r\n                boundaryGap: false\r\n              }\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: \"value\",\r\n                offset: \"20\",\r\n                name: \"USD/bbl.\",\r\n                nameGap: \"20\", //坐标轴名称与轴线之间的距离。\r\n                nameLocation: \"end\",\r\n                nameTextStyle: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  align: \"center\"\r\n                },\r\n                max: function(value) {\r\n                  return value.max + 0.5;\r\n                },\r\n                min: function(value) {\r\n                  return value.min - 0.5;\r\n                },\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  formatter: function(value) {\r\n                    return value.toFixed(0);\r\n                  }\r\n                },\r\n                axisLine: {\r\n                  show: false\r\n                },\r\n                splitLine: {\r\n                  //控制区域的分割线\r\n                  show: true,\r\n                  lineStyle: {\r\n                    color: \"rgba(59, 62, 82, 1)\",\r\n                    width: 3,\r\n                    type: \"solid\"\r\n                  }\r\n                },\r\n                splitArea: {\r\n                  //控制区域颜色\r\n                  show: true,\r\n                  areaStyle: {\r\n                    color: [\"transparent\", \"transparent\"]\r\n                  }\r\n                },\r\n                axisTick: {\r\n                  //刻度线\r\n                  show: false\r\n                }\r\n                // max:function(value){\r\n                //   console.log(value)\r\n                //   return value\r\n                // },\r\n                // min: function(value) {\r\n                //   console.log(value)\r\n                //     return value.min - 20;\r\n                // }\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: chartData.date, //\r\n                type: \"line\",\r\n                smooth: false,\r\n                symbol: \"diamond\",\r\n                symbolSize: 20,\r\n                // yAxisIndex: 0,\r\n                data: chartData.current,\r\n                lineStyle: {\r\n                  normal: { width: \"5\", color: \"rgba(0, 164, 207, 1)\" }\r\n                }\r\n              },\r\n              {\r\n                name: \"一天前\",\r\n                type: \"line\",\r\n                smooth: false,\r\n                symbol: \"diamond\",\r\n                symbolSize: 20,\r\n                // yAxisIndex: 0,\r\n                data: chartData.last,\r\n                lineStyle: {\r\n                  normal: { width: \"5\", color: \"rgba(217, 137, 20, 1)\" }\r\n                }\r\n              },\r\n              {\r\n                name: \"一周前\",\r\n                type: \"line\",\r\n                smooth: false,\r\n                symbol: \"diamond\",\r\n                symbolSize: 20,\r\n                // yAxisIndex: 0,\r\n                data: chartData.last_four,\r\n                lineStyle: {\r\n                  normal: { width: \"5\", color: \"rgba(6, 161, 142, 1)\" }\r\n                }\r\n              },\r\n              {\r\n                name: \"一月前\",\r\n                type: \"line\",\r\n                symbol: \"diamond\",\r\n                smooth: false,\r\n                symbolSize: 20,\r\n                // yAxisIndex: 0,\r\n                data: chartData.last_twen,\r\n                lineStyle: {\r\n                  normal: { width: \"5\", color: \"rgba(246, 120, 160, 1)\" }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        };\r\n        this.ChartDataList.push({\r\n          option: CurveOption,\r\n          flag: false,\r\n          con: this.content.spread\r\n        });\r\n      });\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.$x.get(this.url.brentView, {}).then(res => {\r\n      this.content = res.data;\r\n      console.log(this.content)\r\n      this.setForecastOption().then(h => {\r\n        this.setCurveOption();\r\n      });\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.market ul {\r\n  width: 100%;\r\n  height: 1848px;\r\n  padding: 88px 188px 200px 100px;\r\n  box-sizing: border-box;\r\n}\r\n.market ul li {\r\n  width: 100%;\r\n  height: 49%;\r\n  margin-bottom: 80px;\r\n  /* border: 1px solid #fff; */\r\n}\r\n/* .market ul li:nth-of-type(1){\r\n  height: 56%;\r\n} */\r\n.con-chart {\r\n  width: 2300px;\r\n  height: 100%;\r\n  margin-right: 279px;\r\n  float: left;\r\n}\r\n.con-abstract {\r\n  width: calc(100% - 2579px);\r\n  padding-top: 144px;\r\n  height: 100%;\r\n  float: left;\r\n}\r\n.con-abstract p {\r\n  width: 100%;\r\n  height: 280px;\r\n  font-size: 50px;\r\n  text-align: left;\r\n  font-family: PingFangSC-Regular;\r\n  font-weight: 400;\r\n  color: rgba(255, 255, 255, 1);\r\n  line-height: 90px;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 4;\r\n  overflow: hidden;\r\n  margin-bottom: 50px;\r\n}\r\n.con-abstract_expect {\r\n  width: 100%;\r\n  height: 150px;\r\n  padding-right: 190px;\r\n}\r\n.con-abstract_expect label {\r\n  float: left;\r\n  font-size: 50px;\r\n  font-family: PingFangSC-Regular;\r\n  font-weight: 400;\r\n  color: rgba(255, 255, 255, 1);\r\n  line-height: 112px;\r\n}\r\n.con-abstract_expect span {\r\n  float: right;\r\n  font-size: 80px;\r\n  font-family: PingFangSC-Medium;\r\n  font-weight: 500;\r\n  color: rgba(251, 87, 103, 1);\r\n  line-height: 112px;\r\n  position: relative;\r\n  right: 210px;\r\n}\r\n.con-abstract_expect span::after {\r\n  position: absolute;\r\n  content: \"美元/桶\";\r\n  right: -185px;\r\n  top: 0;\r\n  font-size: 50px;\r\n  font-family: PingFangSC-Regular;\r\n  font-weight: 400;\r\n  color: rgba(255, 255, 255, 1);\r\n  line-height: 130px;\r\n}\r\n.brent-left {\r\n  width: 1300px;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.brent-right {\r\n  width: 1200px;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 1136px;\r\n}\r\n</style>\r\n\r\n\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./market.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./market.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./market.vue?vue&type=template&id=53a24df4&scoped=true&\"\nimport script from \"./market.vue?vue&type=script&lang=js&\"\nexport * from \"./market.vue?vue&type=script&lang=js&\"\nimport style0 from \"./market.vue?vue&type=style&index=0&id=53a24df4&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"53a24df4\",\n  null\n  \n)\n\nexport default component.exports","module.exports = require(\"core-js/library/fn/array/from\");","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./market.vue?vue&type=style&index=0&id=53a24df4&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./market.vue?vue&type=style&index=0&id=53a24df4&scoped=true&lang=css&\"","module.exports = require(\"core-js/library/fn/is-iterable\");","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n"],"sourceRoot":""}