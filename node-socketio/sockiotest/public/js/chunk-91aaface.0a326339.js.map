{"version":3,"sources":["webpack:///E:/study/vue/vue-cli-mpa/src/pages/index/views/basic.vue?5c11","webpack:///E:/study/vue/vue-cli-mpa/src/pages/index/views/basic.vue?e610","webpack:///src/pages/index/views/basic.vue","webpack:///E:/study/vue/vue-cli-mpa/src/pages/index/views/basic.vue?e8a7","webpack:///E:/study/vue/vue-cli-mpa/src/pages/index/views/basic.vue","webpack:///E:/study/vue/vue-cli-mpa/node_modules/core-js/modules/es6.function.name.js","webpack:///E:/study/vue/vue-cli-mpa/src/components/chart.vue?6395","webpack:///src/components/chart.vue","webpack:///E:/study/vue/vue-cli-mpa/src/components/chart.vue?d90b","webpack:///E:/study/vue/vue-cli-mpa/src/components/chart.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_basic_vue_vue_type_style_index_0_id_29027ac2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_basic_vue_vue_type_style_index_0_id_29027ac2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","item","index","key","attrs","chartData","staticRenderFns","basicvue_type_script_lang_js_","data","ChartDataList","components","chart","methods","setDemandOption","_this","$x","get","url","supplyBalance","then","res","last","predict","title","supplyStartArr","supply","slice","demandStartArr","demand","dottedLen","length","i","push","supplyEndArr","demandEndArr","_i","unshift","supplyMaxData","Math","max","apply","supplyMinData","min","demandMaxData","demandMinData","leftMaxData","leftMinData","demandOption","option","dataZoom","type","start","end","text","left","textStyle","color","fontSize","tooltip","trigger","formatter","params","ticket","callback","htmlStr","valMap","param","xName","name","seriesName","value","grid","bottom","top","xAxis","show","x_lable","axisPointer","offset","axisLine","lineStyle","axisLabel","axisTick","splitLine","legend","fontWeight","lineHeight","padding","icon","yAxis","nameGap","nameLocation","nameTextStyle","width","toFixed","splitArea","areaStyle","averValue","ceil","diffsMinData","diffs","diffsMaxData","abs","series","yAxisIndex","symbol","itemStyle","normal","smooth","barCategoryGap","setCurveOption","_this2","eiaIndex","result","DOESCRUD","txtTitle","maxData","JSON","parse","minData","avgData","curData","lastData","other","maxMaxData","maxCurData","minMinData","minCurData","yMax","yMin","diffMax","eiaIndexOption","concat","period","last_year","current_year","animation","label","backgroundColor","borderColor","borderWidth","shadowBlur","shadowOffsetX","shadowOffsetY","right","date","align","opacity","stack","symbolSize","setHoldPosOption","_this3","holdPosOption","position","brent","setDennessOption","_this4","dennessOption","eur","usa","mounted","_this5","c","h","views_basicvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","dP","f","FProto","Function","prototype","nameRE","NAME","configurable","match","e","ref","id","ContId","chartvue_type_script_lang_js_","props","setContId","random","toString","substr","Date","getTime","$refs","chartRef","style","height","promise_default","a","resolve","reject","myCharts","echarts_default","init","document","getElementById","setOption","components_chartvue_type_script_lang_js_"],"mappings":"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","file":"js/chunk-91aaface.0a326339.js","sourcesContent":["import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./basic.vue?vue&type=style&index=0&id=29027ac2&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./basic.vue?vue&type=style&index=0&id=29027ac2&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"basic\"},_vm._l((_vm.ChartDataList),function(item,index){return _c('li',{key:index,staticClass:\"con-item\"},[_c('chart',{attrs:{\"chartData\":item}})],1)}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- 基本面 -->\r\n<template>\r\n  <ul class=\"basic\">\r\n    <li class=\"con-item\" v-for=\"(item,index) in ChartDataList\" :key=\"index\">\r\n      <chart :chartData=\"item\"></chart>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nimport chart from \"@/components/chart\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      ChartDataList: []\r\n    };\r\n  },\r\n  components: {\r\n    chart\r\n  },\r\n  methods: {\r\n    //供需平衡\r\n    setDemandOption() {\r\n      return this.$x.get(this.url.supplyBalance, {}).then(res => {\r\n        let chartData = res.data.last;\r\n        chartData.predict = 39;\r\n        chartData.title = \"全球原油供需平衡\";\r\n\r\n        let supplyStartArr = chartData.supply.slice(0, chartData.predict);\r\n        let demandStartArr = chartData.demand.slice(0, chartData.predict);\r\n        let dottedLen = chartData.supply.length - chartData.predict;\r\n        for (let i = 0; i < dottedLen; i++) {\r\n          supplyStartArr.push(\"-\");\r\n          demandStartArr.push(\"-\");\r\n        }\r\n        let supplyEndArr = chartData.supply.slice(\r\n          chartData.predict - 1,\r\n          chartData.supply.length\r\n        );\r\n        let demandEndArr = chartData.demand.slice(\r\n          chartData.predict - 1,\r\n          chartData.demand.length\r\n        );\r\n        for (let i = 0; i < supplyStartArr.length - dottedLen - 1; i++) {\r\n          supplyEndArr.unshift(\"-\");\r\n          demandEndArr.unshift(\"-\");\r\n        }\r\n        let supplyMaxData = Math.max.apply(Math, chartData.supply) + 0.5;\r\n        let supplyMinData = Math.min.apply(Math, chartData.supply) - 0.5;\r\n        let demandMaxData = Math.max.apply(Math, chartData.demand) + 0.5;\r\n        let demandMinData = Math.min.apply(Math, chartData.demand) - 0.5;\r\n        let leftMaxData =\r\n          supplyMaxData > demandMaxData ? supplyMaxData : demandMaxData;\r\n        let leftMinData =\r\n          supplyMinData < demandMinData ? supplyMinData : demandMinData;\r\n        let demandOption = {\r\n          option: {\r\n            // animation:false,\r\n            dataZoom: [\r\n              {\r\n                type: \"inside\",\r\n                start: 0,\r\n                end: 100\r\n              }\r\n            ],\r\n            title: {\r\n              text: chartData.title, //标题\r\n              left: \"1%\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: \"60\"\r\n              }\r\n            },\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              formatter: function(params, ticket, callback) {\r\n                var htmlStr = \"\";\r\n                var valMap = {};\r\n                for (var i = 0; i < params.length; i++) {\r\n                  var param = params[i];\r\n                  var xName = param.name; //x轴的名称\r\n                  var seriesName = param.seriesName; //图例名称\r\n                  var value = param.value; //y轴值\r\n                  var color = param.color; //图例颜色\r\n                  //过滤无效值\r\n                  if (value == \"-\") {\r\n                    continue;\r\n                  }\r\n                  //过滤重叠值\r\n                  if (valMap[seriesName] == value) {\r\n                    continue;\r\n                  }\r\n                  if (i === 0) {\r\n                    htmlStr += xName + \"<br/>\"; //x轴的名称\r\n                  }\r\n                  htmlStr += \"<div>\";\r\n                  //为了保证和原来的效果一样，这里自己实现了一个点的效果\r\n                  htmlStr +=\r\n                    '<span style=\"margin-right:5px;display:inline-block;width:10px;height:10px;border-radius:5px;background-color:' +\r\n                    color +\r\n                    ';\"></span>';\r\n\r\n                  //圆点后面显示的文本\r\n                  htmlStr += seriesName + \"：\" + value;\r\n\r\n                  htmlStr += \"</div>\";\r\n                  valMap[seriesName] = value;\r\n                }\r\n                return htmlStr;\r\n              }\r\n            },\r\n            grid: {\r\n              bottom: \"140\",\r\n              left: \"80\",\r\n              top: \"180\"\r\n            },\r\n            xAxis: [\r\n              {\r\n                show: true,\r\n                type: \"category\",\r\n                data: chartData.x_lable,\r\n                axisPointer: {\r\n                  type: \"shadow\"\r\n                },\r\n                offset: 25,\r\n                axisLine: {\r\n                  show: false,\r\n                  lineStyle: {\r\n                    color: \"#3b3e52\"\r\n                  }\r\n                },\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 32\r\n                  // formatter: function(value, idx) {\r\n                  //   var date = new Date(value);\r\n                  //   return idx === 0\r\n                  //     ? value\r\n                  //     : [date.getMonth() + 1, date.getDate()].join(\"-\");\r\n                  // }\r\n                },\r\n                axisTick: {\r\n                  //y轴刻度线\r\n                  show: false\r\n                },\r\n                splitLine: {\r\n                  //网格线\r\n                  show: false\r\n                }\r\n              }\r\n            ],\r\n            color: [\r\n              \"rgba(254, 38, 103, 1)\",\r\n              \"rgba(0, 164, 207, 1)\",\r\n              [\"rgba(29, 209, 165, 1)\", \"rgba(245, 101, 118, 1)\"]\r\n            ],\r\n            legend: {\r\n              type: \"plain\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontWeight: \"400\",\r\n                fontSize: \"30\",\r\n                lineHeight: \"42\",\r\n                padding: [0, 80, 0, 10]\r\n              },\r\n              show: true,\r\n              bottom: \"0\",\r\n              left: \"80\",\r\n              data: [\r\n                {\r\n                  name: \"供应(左轴)\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: \"需求(左轴)\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: \"供应 - 需求(右轴)\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                }\r\n              ]\r\n            },\r\n            yAxis: [\r\n              {\r\n                type: \"value\",\r\n                name: \"Million bbl/day\",\r\n                nameGap: \"40\", //坐标轴名称与轴线之间的距离。\r\n                nameLocation: \"end\",\r\n                nameTextStyle: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  width: \"400\",\r\n                  padding: [0, 0, 0, 90]\r\n                },\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  formatter: function(params) {\r\n                    return params.toFixed(0);\r\n                  }\r\n                },\r\n                axisLine: {\r\n                  show: false\r\n                },\r\n                splitLine: {\r\n                  //控制区域的分割线\r\n                  show: true,\r\n                  lineStyle: {\r\n                    color: \"#3b3e52\"\r\n                  }\r\n                },\r\n                splitArea: {\r\n                  //控制区域颜色\r\n                  show: false,\r\n                  areaStyle: {\r\n                    color: [\"#2d3043\", \"#2d3043\"]\r\n                  }\r\n                },\r\n                axisTick: {\r\n                  //刻度线\r\n                  show: false\r\n                },\r\n                min: function(value) {\r\n                  let averValue =\r\n                    leftMinData - Math.ceil((leftMaxData - leftMinData) / 1.5);\r\n                  return averValue;\r\n                },\r\n                max: leftMaxData\r\n              },\r\n              {\r\n                type: \"value\",\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  formatter: function(params) {\r\n                    return params.toFixed(0);\r\n                  }\r\n                },\r\n                axisLine: {\r\n                  show: false\r\n                },\r\n                splitLine: {\r\n                  show: false\r\n                },\r\n                axisTick: {\r\n                  //刻度线\r\n                  show: false\r\n                },\r\n                min: function(value) {\r\n                  if (value.min > 0 && value.max > 0) {\r\n                    return 0;\r\n                  } else {\r\n                    let diffsMinData = Math.min.apply(Math, chartData.diffs);\r\n                    return diffsMinData - 1.5;\r\n                  }\r\n                },\r\n                max: function(value) {\r\n                  let diffsMaxData = Math.max.apply(Math, chartData.diffs);\r\n                  let diffsMinData = Math.min.apply(Math, chartData.diffs);\r\n                  if (diffsMaxData < 0) {\r\n                    return Math.abs(diffsMinData) * 2.5;\r\n                  } else if (diffsMinData > 0 && diffsMaxData < 0) {\r\n                    return Math.abs(diffsMaxData) * 2.5;\r\n                  } else if (diffsMinData > 0 && diffsMaxData > 0) {\r\n                    return Math.abs(diffsMaxData) * 3.5;\r\n                  } else {\r\n                    let averValue =\r\n                      Math.abs(diffsMaxData) + Math.abs(diffsMinData);\r\n                    return averValue * 2.5;\r\n                  }\r\n                }\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: \"供应(左轴)\",\r\n                yAxisIndex: 0,\r\n                type: \"line\",\r\n                symbol: \"none\",\r\n                data: supplyStartArr,\r\n                itemStyle: {\r\n                  normal: {\r\n                    width: 5,\r\n                    color: \"#fe2667\",\r\n                    lineStyle: {\r\n                      color: \"#fe2667\"\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              {\r\n                name: \"供应(左轴)\",\r\n                type: \"line\",\r\n                smooth: false, //关键点，为true是不支持虚线，实线就用true\r\n                yAxisIndex: 0,\r\n                symbol: \"none\",\r\n                itemStyle: {\r\n                  normal: {\r\n                    color: \"#fe2667\",\r\n                    lineStyle: {\r\n                      width: 5,\r\n                      color: \"#fe2667\",\r\n                      type: \"dotted\" //'dotted'虚线 'solid'实线\r\n                    }\r\n                  }\r\n                },\r\n\r\n                data: supplyEndArr\r\n              },\r\n              {\r\n                name: \"需求(左轴)\",\r\n                yAxisIndex: 0,\r\n                symbol: \"none\",\r\n                type: \"line\",\r\n                itemStyle: {\r\n                  normal: {\r\n                    color: \"#00a4cf\",\r\n                    lineStyle: {\r\n                      width: 5,\r\n                      color: \"#00a4cf\"\r\n                    }\r\n                  }\r\n                },\r\n                data: demandStartArr\r\n              },\r\n              {\r\n                name: \"需求(左轴)\",\r\n                type: \"line\",\r\n                yAxisIndex: 0,\r\n                symbol: \"none\",\r\n                smooth: false, //关键点，为true是不支持虚线，实线就用true\r\n                itemStyle: {\r\n                  normal: {\r\n                    color: \"#00a4cf\",\r\n                    lineStyle: {\r\n                      color: \"#00a4cf\",\r\n                      width: 5,\r\n                      type: \"dotted\" //'dotted'虚线 'solid'实线\r\n                    }\r\n                  }\r\n                },\r\n                data: demandEndArr\r\n              },\r\n              {\r\n                name: \"供应 - 需求(右轴)\",\r\n                type: \"bar\",\r\n                yAxisIndex: 1,\r\n                barCategoryGap: \"10%\",\r\n                itemStyle: {\r\n                  normal: {\r\n                    color: function(params) {\r\n                      if (params.value > 0) {\r\n                        return \"#f86555\";\r\n                      } else {\r\n                        return \"#1dd1a5\";\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n                data: chartData.diffs\r\n              }\r\n            ]\r\n          }\r\n        };\r\n        this.ChartDataList.push(demandOption);\r\n      });\r\n    },\r\n    //EIA 原油库存\r\n    setCurveOption() {\r\n      return this.$x.get(this.url.eiaIndex, {}).then(res => {\r\n        //EIA 原油库存\r\n        let result = res.data.DOESCRUD;\r\n        const txtTitle = result[\"title\"];\r\n        const maxData = JSON.parse(result[\"max\"]),\r\n          minData = JSON.parse(result[\"min\"]),\r\n          avgData = JSON.parse(result[\"avg\"]),\r\n          curData = JSON.parse(result[\"cur\"]),\r\n          lastData = JSON.parse(result[\"last\"]),\r\n          other = JSON.parse(result[\"other\"]);\r\n        const maxMaxData = Math.max.apply(null, maxData),\r\n          maxCurData = Math.max.apply(null, curData);\r\n        const minMinData = Math.min.apply(null, minData),\r\n          minCurData = Math.min.apply(null, curData);\r\n        const yMax = Math.max(maxMaxData, maxCurData),\r\n          yMin = Math.min(minMinData, minCurData);\r\n        const diffMax = [];\r\n        for (let i in maxData) {\r\n          diffMax.push(maxData[i] - minData[i]);\r\n        }\r\n        let eiaIndexOption = {\r\n          option: {\r\n            // animation:false,\r\n            dataZoom: [\r\n              {\r\n                type: \"inside\",\r\n                start: 0,\r\n                end: 100\r\n              }\r\n            ],\r\n            color: [\r\n              \"rgba(114, 119, 149, 1)\",\r\n              \"rgba(226, 226, 226, 1)\",\r\n              \"rgba(19, 180, 209, 1)\",\r\n              \"rgba(245, 101, 118, 1)\"\r\n            ],\r\n            legend: {\r\n              type: \"plain\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontWeight: \"400\",\r\n                fontSize: \"30\",\r\n                lineHeight: \"42\",\r\n                padding: [0, 80, 0, 10]\r\n              },\r\n              show: true,\r\n              bottom: \"0\",\r\n              left: \"130\",\r\n              data: [\r\n                {\r\n                  name: `${other.period}年数据区间`,\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: `${other.period}年平均数据`,\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: `${other.last_year}年数据`,\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: `${other.current_year}年数据`,\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                }\r\n              ]\r\n            },\r\n            title: {\r\n              text: txtTitle, //标题\r\n              left: \"1%\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: \"60\"\r\n              }\r\n            },\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              axisPointer: {\r\n                type: \"cross\",\r\n                animation: false,\r\n                label: {\r\n                  backgroundColor: \"#ccc\",\r\n                  fontSize: 28,\r\n                  borderColor: \"#aaa\",\r\n                  borderWidth: 1,\r\n                  shadowBlur: 0,\r\n                  shadowOffsetX: 0,\r\n                  shadowOffsetY: 0,\r\n                  textStyle: {\r\n                    color: \"#222\"\r\n                  }\r\n                }\r\n              },\r\n              formatter: function(params) {\r\n                if (params[3]) {\r\n                  return params[2].name + \"<br />\" + params[3].value;\r\n                } else {\r\n                  return params[2].name;\r\n                }\r\n              }\r\n            },\r\n            grid: {\r\n              //坐标系（）\r\n              bottom: \"140\",\r\n              left: \"8%\",\r\n              top: \"180\",\r\n              right: \"4%\"\r\n            },\r\n            xAxis: {\r\n              show: true,\r\n              type: \"category\",\r\n              data: result.date,\r\n              offset: 25,\r\n              axisLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                  color: \"#3b3e52\"\r\n                }\r\n              },\r\n              axisLabel: {\r\n                color: \"#93959d\",\r\n                fontSize: 32\r\n                // formatter: function(value, idx) {\r\n                //   var date = new Date(value);\r\n                //   return idx === 0\r\n                //     ? value\r\n                //     : [date.getMonth() + 1, date.getDate()].join(\"-\");\r\n                // }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisPointer: {\r\n                type: \"shadow\"\r\n              },\r\n\r\n              axisTick: {\r\n                //y轴刻度线\r\n                show: false\r\n              }\r\n            },\r\n            yAxis: {\r\n              type: \"value\",\r\n              name: \"Million bbl/day\",\r\n              offset: \"12\",\r\n              nameGap: \"40\", //坐标轴名称与轴线之间的距离。\r\n              nameLocation: \"end\",\r\n              nameTextStyle: {\r\n                color: \"#93959d\",\r\n                fontSize: 28,\r\n                align: \"center\",\r\n                width: \"400\"\r\n              },\r\n              axisLabel: {\r\n                color: \"#93959d\",\r\n                fontSize: 28,\r\n                formatter: function(params) {\r\n                  return params.toFixed(0);\r\n                }\r\n              },\r\n              axisLine: {\r\n                show: false\r\n              },\r\n              splitLine: {\r\n                //控制区域的分割线\r\n                show: true,\r\n                lineStyle: {\r\n                  color: \"rgba(59, 62, 82, 1)\",\r\n                  width: 3,\r\n                  type: \"solid\"\r\n                }\r\n              },\r\n              splitArea: {\r\n                //控制区域颜色\r\n                show: true,\r\n                areaStyle: {\r\n                  color: [\"transparent\", \"transparent\"]\r\n                }\r\n              },\r\n              axisTick: {\r\n                //刻度线\r\n                show: false\r\n              },\r\n              min: yMin,\r\n              max: yMax\r\n            },\r\n            series: [\r\n              {\r\n                name: `${other.period}年数据区间`,\r\n                type: \"line\",\r\n                data: minData,\r\n                lineStyle: {\r\n                  normal: { color: \"rgba(114,119,149,1)\", opacity: 0 }\r\n                },\r\n                stack: \"a\",\r\n                symbol: \"none\"\r\n              },\r\n              {\r\n                name: `${other.period}年数据区间`,\r\n                type: \"line\",\r\n                data: diffMax,\r\n                lineStyle: {\r\n                  normal: { color: \"rgba(114,119,149,1)\", opacity: 0 }\r\n                },\r\n                stack: \"a\",\r\n                symbol: \"none\",\r\n\r\n                areaStyle: { normal: { color: \"rgba(114,119,149,0.3)\" } }\r\n              },\r\n\r\n              {\r\n                name: `${other.period}年平均数据`,\r\n                type: \"line\",\r\n                data: avgData,\r\n                itemStyle: {\r\n                  normal: { lineStyle: { width: 3, type: \"solid\" } }\r\n                },\r\n                symbol: \"none\",\r\n                lineStyle: {\r\n                  normal: { width: 4, color: \"rgba(226, 226, 226, 0.3)\" }\r\n                }\r\n              },\r\n              {\r\n                name: `${other.last_year}年数据`,\r\n                type: \"line\",\r\n                data: lastData,\r\n                symbolSize: 5,\r\n                symbol: \"none\",\r\n                lineStyle: { normal: { width: 4, color: \"#13B4D1\" } },\r\n                itemStyle: {\r\n                  normal: {\r\n                    width: 3,\r\n                    color: \"#13B4D1\"\r\n                  }\r\n                }\r\n              },\r\n              {\r\n                name: `${other.current_year}年数据`,\r\n                type: \"line\",\r\n                data: curData,\r\n                symbolSize: 5,\r\n                symbol: \"none\",\r\n                lineStyle: { normal: { width: 4, color: \"#f1726d\" } },\r\n                itemStyle: {\r\n                  normal: {\r\n                    width: 3,\r\n                    color: \"#f1726d\"\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        };\r\n        this.ChartDataList.push(eiaIndexOption);\r\n      });\r\n    },\r\n    //CFTC非商业持仓头寸\r\n    setHoldPosOption() {\r\n       return this.$x.get(this.url.holdPosOption, {}).then(res => {\r\n        let chartData = res.data;\r\n        //CFTC非商业持仓头寸\r\n        let holdPosOption = {\r\n          option: {\r\n            // animation:false,\r\n            dataZoom: [\r\n              {\r\n                type: \"inside\",\r\n                start: 0,\r\n                end: 100\r\n              }\r\n            ],\r\n            color: [\"rgba(54, 145, 212, 1)\", \"rgba(252, 89, 101, 1)\"],\r\n            legend: {\r\n              type: \"plain\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontWeight: \"400\",\r\n                fontSize: \"30\",\r\n                lineHeight: \"42\",\r\n                padding: [0, 80, 0, 10]\r\n              },\r\n              show: true,\r\n              bottom: \"0\",\r\n              left: \"160\",\r\n              data: [\r\n                {\r\n                  name: \"非商业持仓净多头(左轴)\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: \"Brent周均价(右轴)\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                }\r\n              ]\r\n            },\r\n            title: {\r\n              text: \"CFTC非商业持仓头寸\", //标题\r\n              left: \"40\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: \"60\"\r\n              }\r\n            },\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              axisPointer: {\r\n                type: \"cross\",\r\n                animation: false,\r\n                label: {\r\n                  backgroundColor: \"#ccc\",\r\n                  fontSize: 28,\r\n                  borderColor: \"#aaa\",\r\n                  borderWidth: 1,\r\n                  shadowBlur: 0,\r\n                  shadowOffsetX: 0,\r\n                  shadowOffsetY: 0,\r\n                  textStyle: {\r\n                    color: \"#222\"\r\n                  }\r\n                }\r\n              }\r\n              // formatter: function(params) {\r\n              //   if (params[3]) {\r\n              //     return params[2].name + \"<br />\" + params[3].value;\r\n              //   } else {\r\n              //     return params[2].name;\r\n              //   }\r\n              // }\r\n            },\r\n            grid: {\r\n              //坐标系（）\r\n              bottom: \"207\",\r\n              left: \"160\",\r\n              top: \"180\",\r\n              right: \"7%\"\r\n            },\r\n            // calculable: true,\r\n            xAxis: [\r\n              {\r\n                type: \"category\",\r\n                data: chartData.x_lable,\r\n                show: true,\r\n                offset: 25,\r\n                axisLine: {\r\n                  show: true,\r\n                  lineStyle: {\r\n                    color: \"#3b3e52\"\r\n                  }\r\n                },\r\n                splitLine: {\r\n                  //控制区域的分割线\r\n                  show: false,\r\n                  lineStyle: {\r\n                    color: \"rgba(59, 62, 82, 1)\",\r\n                    width: 3,\r\n                    type: \"solid\"\r\n                  }\r\n                },\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 32\r\n                  // formatter: function(value, idx) {\r\n                  //   var date = new Date(value);\r\n                  //   return idx === 0\r\n                  //     ? value\r\n                  //     : [date.getMonth() + 1, date.getDate()].join(\"-\");\r\n                  // }\r\n                },\r\n                axisPointer: {\r\n                  type: \"shadow\"\r\n                },\r\n\r\n                axisTick: {\r\n                  //y轴刻度线\r\n                  show: false\r\n                }\r\n              }\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: \"value\",\r\n                name: \"Contracts\",\r\n                offset: \"12\",\r\n                nameGap: \"40\", //坐标轴名称与轴线之间的距离。\r\n                nameLocation: \"end\",\r\n                nameTextStyle: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  align: \"left\",\r\n                  width: \"400\",\r\n                  padding: [0, 80, 0, 0]\r\n                },\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  formatter: function(params) {\r\n                    return params.toFixed(0);\r\n                  }\r\n                },\r\n                axisLine: {\r\n                  show: false\r\n                },\r\n                splitLine: {\r\n                  //控制区域的分割线\r\n                  show: true,\r\n                  lineStyle: {\r\n                    color: \"rgba(59, 62, 82, 1)\",\r\n                    width: 3,\r\n                    type: \"solid\"\r\n                  }\r\n                },\r\n                splitArea: {\r\n                  //控制区域颜色\r\n                  show: true,\r\n                  areaStyle: {\r\n                    color: [\"transparent\", \"transparent\"]\r\n                  }\r\n                },\r\n                axisTick: {\r\n                  //刻度线\r\n                  show: false\r\n                }\r\n              },\r\n              {\r\n                type: \"value\",\r\n                name: \"USD/bbl.\",\r\n                // offset: \"12\",\r\n                nameGap: \"40\", //坐标轴名称与轴线之间的距离。\r\n                nameLocation: \"end\",\r\n                nameTextStyle: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  align: \"center\"\r\n                },\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  formatter: function(params) {\r\n                    return params.toFixed(0);\r\n                  }\r\n                },\r\n                axisLine: {\r\n                  show: false\r\n                },\r\n                splitLine: {\r\n                  //控制区域的分割线\r\n                  show: true,\r\n                  lineStyle: {\r\n                    color: \"rgba(59, 62, 82, 1)\",\r\n                    width: 3,\r\n                    type: \"solid\"\r\n                  }\r\n                },\r\n                splitArea: {\r\n                  //控制区域颜色\r\n                  show: true,\r\n                  areaStyle: {\r\n                    color: [\"transparent\", \"transparent\"]\r\n                  }\r\n                },\r\n                axisTick: {\r\n                  //刻度线\r\n                  show: false\r\n                }\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: \"非商业持仓净多头(左轴)\",\r\n                type: \"line\",\r\n                smooth: false,\r\n                symbol: \"none\",\r\n                yAxisIndex: 0,\r\n                data: chartData.position,\r\n                lineStyle: {\r\n                  normal: { width: \"5\", color: \"rgba(54, 145, 212, 1)\" }\r\n                }\r\n              },\r\n              {\r\n                name: \"Brent周均价(右轴)\",\r\n                type: \"line\",\r\n                smooth: false,\r\n                symbol: \"none\",\r\n                yAxisIndex: 1,\r\n                data: chartData.brent,\r\n                lineStyle: {\r\n                  normal: { width: \"5\", color: \"rgba(255, 99, 93, 1)\" }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        };\r\n        this.ChartDataList.push(holdPosOption);\r\n      });\r\n    },\r\n    //花旗银行经济意外指数\r\n    setDennessOption() {\r\n       return this.$x.get(this.url.dennessOption, {}).then(res => {\r\n        let chartData = res.data;\r\n        //花旗银行经济意外指数\r\n        let dennessOption = {\r\n          option: {\r\n            // animation:false,\r\n            dataZoom: [\r\n              {\r\n                type: \"inside\",\r\n                start: 0,\r\n                end: 100\r\n              }\r\n            ],\r\n            color: [\r\n              \"rgba(54, 145, 212, 1)\",\r\n              \"rgba(138, 138, 138, 1)\",\r\n              \"rgba(252, 89, 101, 1)\"\r\n            ],\r\n            legend: {\r\n              type: \"plain\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontWeight: \"400\",\r\n                fontSize: \"30\",\r\n                lineHeight: \"42\",\r\n                padding: [0, 80, 0, 10]\r\n              },\r\n              show: true,\r\n              bottom: \"0\",\r\n              left: \"120\",\r\n              data: [\r\n                {\r\n                  name: \"花旗银行经济意外指数(欧洲）\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: \"花旗银行经济意外指数(美国)\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                },\r\n                {\r\n                  name: \"Brent日结算价(右轴)\",\r\n                  // 强制设置图形为圆。\r\n                  icon: \"roundRect\"\r\n                }\r\n              ]\r\n            },\r\n            title: {\r\n              text: \"花旗银行经济意外指数\", //标题\r\n              left: \"1%\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: \"60\"\r\n              }\r\n            },\r\n            tooltip: {\r\n              trigger: \"axis\",\r\n              axisPointer: {\r\n                type: \"cross\",\r\n                animation: false,\r\n                label: {\r\n                  backgroundColor: \"#ccc\",\r\n                  fontSize: 28,\r\n                  borderColor: \"#aaa\",\r\n                  borderWidth: 1,\r\n                  shadowBlur: 0,\r\n                  shadowOffsetX: 0,\r\n                  shadowOffsetY: 0,\r\n                  textStyle: {\r\n                    color: \"#222\"\r\n                  }\r\n                }\r\n              }\r\n              // formatter: function(params) {\r\n              //   if (params[3]) {\r\n              //     return params[2].name + \"<br />\" + params[3].value;\r\n              //   } else {\r\n              //     return params[2].name;\r\n              //   }\r\n              // }\r\n            },\r\n            grid: {\r\n              //坐标系（）\r\n              bottom: \"207\",\r\n              left: \"7%\",\r\n              top: \"180\",\r\n              right: \"7%\"\r\n            },\r\n            // calculable: true,\r\n            xAxis: [\r\n              {\r\n                type: \"category\",\r\n                data: chartData.x_lable,\r\n                show: true,\r\n                offset: 25,\r\n                axisLine: {\r\n                  show: true,\r\n                  lineStyle: {\r\n                    color: \"#3b3e52\"\r\n                  }\r\n                },\r\n                splitLine: {\r\n                  //控制区域的分割线\r\n                  show: false,\r\n                  lineStyle: {\r\n                    color: \"rgba(59, 62, 82, 1)\",\r\n                    width: 3,\r\n                    type: \"solid\"\r\n                  }\r\n                },\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 32\r\n                  // formatter: function(value, idx) {\r\n                  //   var date = new Date(value);\r\n                  //   return idx === 0\r\n                  //     ? value\r\n                  //     : [date.getMonth() + 1, date.getDate()].join(\"-\");\r\n                  // }\r\n                },\r\n                axisPointer: {\r\n                  type: \"shadow\"\r\n                },\r\n\r\n                axisTick: {\r\n                  //y轴刻度线\r\n                  show: false\r\n                }\r\n              }\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: \"value\",\r\n                offset: \"12\",\r\n                nameGap: \"40\", //坐标轴名称与轴线之间的距离。\r\n                nameLocation: \"end\",\r\n                nameTextStyle: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  align: \"center\"\r\n                },\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  formatter: function(params) {\r\n                    return params.toFixed(0);\r\n                  }\r\n                },\r\n                axisLine: {\r\n                  show: false\r\n                },\r\n                splitLine: {\r\n                  //控制区域的分割线\r\n                  show: true,\r\n                  lineStyle: {\r\n                    color: \"rgba(59, 62, 82, 1)\",\r\n                    width: 3,\r\n                    type: \"solid\"\r\n                  }\r\n                },\r\n                splitArea: {\r\n                  //控制区域颜色\r\n                  show: true,\r\n                  areaStyle: {\r\n                    color: [\"transparent\", \"transparent\"]\r\n                  }\r\n                },\r\n                axisTick: {\r\n                  //刻度线\r\n                  show: false\r\n                }\r\n              },\r\n              {\r\n                type: \"value\",\r\n                name: \"USD/bbl.\",\r\n                // offset: \"12\",\r\n                nameGap: \"40\", //坐标轴名称与轴线之间的距离。\r\n                nameLocation: \"end\",\r\n                nameTextStyle: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  align: \"center\"\r\n                },\r\n                axisLabel: {\r\n                  color: \"#93959d\",\r\n                  fontSize: 28,\r\n                  formatter: function(params) {\r\n                    return params.toFixed(0);\r\n                  }\r\n                },\r\n                axisLine: {\r\n                  show: false\r\n                },\r\n                splitLine: {\r\n                  show: false\r\n                },\r\n                max: function(value) {\r\n                  return value.max + 20;\r\n                },\r\n                min: function(value) {\r\n                  return value.min - 20;\r\n                },\r\n                //   //控制区域的分割线\r\n                //   show: true,\r\n                //   lineStyle: {\r\n                //     color: \"rgba(59, 62, 82, 1)\",\r\n                //     width: 3,\r\n                //     type: \"solid\"\r\n                //   }\r\n                // },\r\n                // splitArea: {\r\n                //   //控制区域颜色\r\n                //   show: true,\r\n                //   areaStyle: {\r\n                //     color: [\"#2d3043\", \"#2d3043\"]\r\n                //   }\r\n                // },\r\n                axisTick: {\r\n                  //刻度线\r\n                  show: false\r\n                }\r\n              }\r\n            ],\r\n            series: [\r\n              {\r\n                name: \"花旗银行经济意外指数(欧洲）\",\r\n                type: \"line\",\r\n                smooth: false,\r\n                symbol: \"none\",\r\n                yAxisIndex: 0,\r\n                data: chartData.eur,\r\n                lineStyle: {\r\n                  normal: { width: \"5\", color: \"rgba(54, 145, 212, 1)\" }\r\n                }\r\n              },\r\n              {\r\n                name: \"花旗银行经济意外指数(美国)\",\r\n                type: \"line\",\r\n                smooth: false,\r\n                symbol: \"none\",\r\n                yAxisIndex: 0,\r\n                data: chartData.usa,\r\n                lineStyle: {\r\n                  normal: { width: \"5\", color: \"rgba(255, 99, 93, 1)\" }\r\n                }\r\n              },\r\n              {\r\n                name: \"Brent日结算价(右轴)\",\r\n                type: \"line\",\r\n                smooth: false,\r\n                symbol: \"circle\",\r\n                yAxisIndex: 1,\r\n                data: chartData.brent,\r\n                lineStyle: {\r\n                  normal: { width: \"5\", color: \"rgba(138, 138, 138, 1)\" }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        };\r\n        this.ChartDataList.push(dennessOption);\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    // var funcs = [\r\n    //   this.setDemandOption,\r\n    //   this.setCurveOption,\r\n    //   this.setHoldPosOption,\r\n    //   this.setDennessOption\r\n    // ];\r\n    // (async () => {\r\n    //   // for (let i = 0; i < funcs.length; i++) {\r\n    //     // await funcs[i]();\r\n    //     await  this.setDemandOption();\r\n    //     await  this.setCurveOption();\r\n    //     await  this.setHoldPosOption();\r\n    //     await  this.setDennessOption();\r\n    //   // }\r\n    // })();\r\n    this.setDemandOption()\r\n      .then(res => {\r\n        this.setCurveOption().then(c => {\r\n        this.setHoldPosOption().then(h => {\r\n        this.setDennessOption();\r\n      });;\r\n      });\r\n      })\r\n     \r\n      \r\n  }\r\n};\r\n</script>\r\n<style  scoped>\r\n.basic {\r\n  width: 100%;\r\n  height: 1848px;\r\n  padding-left: 60px;\r\n  padding-top: 39px;\r\n  box-sizing: border-box;\r\n}\r\n.basic li.con-item {\r\n  float: left;\r\n  width: 1830px;\r\n  height: 940px;\r\n  margin-right: 60px;\r\n  color: #fff;\r\n  background: rgba(45, 48, 67, 0.4);\r\n  margin-bottom: 60px;\r\n  padding: 40px 50px;\r\n  box-sizing: border-box;\r\n}\r\n.basic li:nth-of-type(1),\r\n.basic li:nth-of-type(2) {\r\n  height: 838px;\r\n}\r\n.basic li.con-item:nth-of-type(2n) {\r\n  margin-right: 0;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./basic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./basic.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./basic.vue?vue&type=template&id=29027ac2&scoped=true&\"\nimport script from \"./basic.vue?vue&type=script&lang=js&\"\nexport * from \"./basic.vue?vue&type=script&lang=js&\"\nimport style0 from \"./basic.vue?vue&type=style&index=0&id=29027ac2&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"29027ac2\",\n  null\n  \n)\n\nexport default component.exports","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"chartRef\",attrs:{\"id\":_vm.ContId}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n      <div :id=\"ContId\" ref=\"chartRef\"></div>\r\n</template>\r\n\r\n<script>\r\n  import echarts from 'echarts'\r\n\r\n  export default {\r\n    name: \"echartBlock\",\r\n    props: {\r\n      chartData: {\r\n        type: Object\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        ContId:'',\r\n      }\r\n    },\r\n    methods: {\r\n      setContId(){\r\n        this.ContId = (Math.random()*10000000).toString(16).substr(0,4)+'-'+(new Date()).getTime()+'-'+Math.random().toString().substr(2,5);;\r\n        this.$refs.chartRef.style.width = '100%'\r\n        this.$refs.chartRef.style.height = '100%'\r\n        const _this = this;\r\n        return new Promise(function(resolve, reject){        //做一些异步操作\r\n            resolve(_this.ContId);\r\n        });\r\n      },\r\n    },\r\n    mounted() {\r\n      this.setContId().then(res=>{ \r\n        let myCharts = echarts.init(document.getElementById(res));\r\n        myCharts.setOption(this.chartData.option);\r\n      });\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n    \r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./chart.vue?vue&type=template&id=197cf966&scoped=true&\"\nimport script from \"./chart.vue?vue&type=script&lang=js&\"\nexport * from \"./chart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"197cf966\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}